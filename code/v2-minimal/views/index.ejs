<!DOCTYPE html>
<html>
  <head>
    <title>SignalWire v2 Client Minimal Example</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container">
        <a class="navbar-brand" href="#">SignalWirev2 Client Minimal Example</a>
      </div>
    </nav>
    <div class="container">
      <input type="text" id="destination" class="form-control" placeholder="Destination" value="<%= defaultDestination %>">
      <button class="btn btn-primary" id="callbtn" onclick="makeCall()">Call</button>
      <button class="btn btn-danger" id="callbtn" onclick="hangup()">Hangup</button>
    </div>
    
    <video id="remoteVideo" style="width: 1px; height: 1px; background-color: #fff;"></video>
    <video id="localVideo" style="width: 1px; height: 1px; background-color: #fff;"></video>

    <script type="text/javascript" src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
    <script type="text/javascript" src="https://unpkg.com/@signalwire/js@^1"></script>
    <script>
      var project = "<%= projectId %>";
      var token = "<%= token %>";
      var currentCall = null;

      const client = new Relay({
        project: project,
        token: token,
      });

      client.iceServers = [
        {
          "urls": [ "stun:stun.l.google.com:19302" ]
        }
      ]

      client.remoteElement = 'remoteVideo';
      client.localElement = 'localVideo';

      client.enableMicrophone();
      client.disableWebcam();

      client.on('signalwire.error', function(error){
        console.error("SignalWire error:", error);
      });

      client.on('signalwire.ready', async (client) => {
        console.log('You are connected to SignalWire!');
      })

      client.autoRecoverCalls = false;

      client.connect();

      async function makeCall() {
        const options = { destinationNumber: document.getElementById('destination').value }
        console.log(options)
        currentCall = await client.newCall(options).catch(console.error)
      }

      async function hangup() {
        if (currentCall) {
          await currentCall.hangup()
        }
      }

    </script>
  </body>
</html>